public final class modular/core/LinkType : java/io/Serializable {
	public static final field Companion Lmodular/core/LinkType$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lmodular/core/LinkType;
	public static synthetic fun copy$default (Lmodular/core/LinkType;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lmodular/core/LinkType;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColor ()Ljava/lang/String;
	public final fun getConfiguration ()Ljava/lang/String;
	public final fun getDisplayName ()Ljava/lang/String;
	public final fun getStyle ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class modular/core/LinkType$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lmodular/core/LinkType$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lmodular/core/LinkType;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lmodular/core/LinkType;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class modular/core/LinkType$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class modular/core/LinkTypeSpec {
	public abstract fun getColor ()Lorg/gradle/api/provider/Property;
	public abstract fun getConfiguration ()Lorg/gradle/api/provider/Property;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getStyle ()Lorg/gradle/api/provider/Property;
}

public abstract interface annotation class modular/core/ModularDsl : java/lang/annotation/Annotation {
}

public abstract interface class modular/core/ModularExtension {
	public abstract fun getAlsoTraverseUpwards ()Lorg/gradle/api/provider/Property;
	public abstract fun getCheckOutputs ()Lorg/gradle/api/provider/Property;
	public abstract fun getGenerateOnSync ()Lorg/gradle/api/provider/Property;
	public abstract fun getGroupModules ()Lorg/gradle/api/provider/Property;
	public abstract fun getIgnoredConfigs ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getIgnoredModules ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getLinkTypes ()Lmodular/core/NamedLinkTypeContainer;
	public abstract fun getModuleTypes ()Lmodular/core/NamedModuleTypeContainer;
	public abstract fun getPathTransforms ()Lmodular/core/PathTransformSpec;
	public abstract fun getPrintFilesToConsole ()Lorg/gradle/api/provider/Property;
	public abstract fun pathTransforms (Lorg/gradle/api/Action;)V
}

public abstract class modular/core/ModularPlugin : org/gradle/api/Plugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
	protected fun applyToChild (Lorg/gradle/api/Project;)V
	protected fun applyToRoot (Lorg/gradle/api/Project;)V
	protected abstract fun createExtension (Lorg/gradle/api/Project;)Lmodular/core/internal/ModularExtensionImpl;
	protected abstract fun getExtension (Lorg/gradle/api/Project;)Lmodular/core/internal/ModularExtensionImpl;
	protected abstract fun registerChildTasks (Lorg/gradle/api/Project;)V
	protected abstract fun registerRootTasks (Lorg/gradle/api/Project;)V
}

public abstract interface class modular/core/ModularSpec {
	public abstract fun getFileExtension ()Lorg/gradle/api/provider/Property;
	public abstract fun getName ()Ljava/lang/String;
}

public final class modular/core/ModuleType : java/io/Serializable {
	public static final field Companion Lmodular/core/ModuleType$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/util/Map;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lmodular/core/ModuleType;
	public static synthetic fun copy$default (Lmodular/core/ModuleType;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;ILjava/lang/Object;)Lmodular/core/ModuleType;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColor ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getProperties ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class modular/core/ModuleType$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lmodular/core/ModuleType$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lmodular/core/ModuleType;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lmodular/core/ModuleType;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class modular/core/ModuleType$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class modular/core/ModuleTypeSpec : modular/core/internal/PropertiesSpec {
	public abstract fun getColor ()Lorg/gradle/api/provider/Property;
	public abstract fun getHasPluginId ()Lorg/gradle/api/provider/Property;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getPathContains ()Lorg/gradle/api/provider/Property;
	public abstract fun getPathMatches ()Lorg/gradle/api/provider/Property;
}

public abstract interface class modular/core/NamedLinkTypeContainer : org/gradle/api/NamedDomainObjectContainer {
}

public abstract interface class modular/core/NamedModuleTypeContainer : org/gradle/api/NamedDomainObjectContainer {
	public fun registerByPathContains (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun registerByPathContains$default (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
	public fun registerByPathMatches (Ljava/lang/String;Ljava/lang/String;Lkotlin/text/Regex;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun registerByPathMatches$default (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Lkotlin/text/Regex;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
	public fun registerByPluginId (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun registerByPluginId$default (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
}

public final class modular/core/NamedModuleTypeContainer$DefaultImpls {
	public static fun registerByPathContains (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun registerByPathContains$default (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static fun registerByPathMatches (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Lkotlin/text/Regex;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun registerByPathMatches$default (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Lkotlin/text/Regex;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static fun registerByPluginId (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun registerByPluginId$default (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
}

public abstract interface class modular/core/PathTransformSpec {
	public abstract fun getReplacements ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun remove (Ljava/lang/String;)V
	public abstract fun remove (Lkotlin/text/Regex;)V
	public abstract fun replace (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun replace (Lkotlin/text/Regex;Ljava/lang/String;)V
}

public final class modular/core/Replacement : java/io/Serializable {
	public static final field Companion Lmodular/core/Replacement$Companion;
	public fun <init> (Lkotlin/text/Regex;Ljava/lang/String;)V
	public final fun getPattern ()Lkotlin/text/Regex;
	public final fun getReplacement ()Ljava/lang/String;
}

public final synthetic class modular/core/Replacement$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lmodular/core/Replacement$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lmodular/core/Replacement;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lmodular/core/Replacement;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class modular/core/Replacement$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class modular/core/internal/IntEnum {
	public abstract fun getValue ()I
}

public final synthetic class modular/core/internal/ModuleLink$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lmodular/core/internal/ModuleLink$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lmodular/core/internal/ModuleLink;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lmodular/core/internal/ModuleLink;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class modular/core/internal/ModuleLink$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class modular/core/internal/StringEnum {
	public abstract fun getString ()Ljava/lang/String;
}

public final synthetic class modular/core/internal/TypedModule$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lmodular/core/internal/TypedModule$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lmodular/core/internal/TypedModule;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lmodular/core/internal/TypedModule;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class modular/core/internal/TypedModule$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class modular/core/tasks/CheckFileDiff : org/gradle/api/DefaultTask {
	public fun <init> ()V
	public final fun execute ()V
	public abstract fun getActualFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getExpectedDirectory ()Lorg/gradle/api/provider/Property;
	public abstract fun getExpectedFilename ()Lorg/gradle/api/provider/Property;
	public abstract fun getProblems ()Lorg/gradle/api/problems/Problems;
	public abstract fun getTaskPath ()Lorg/gradle/api/provider/Property;
}

public abstract class modular/core/tasks/CollateModuleLinks : org/gradle/api/DefaultTask, modular/core/tasks/TaskWithOutputFile {
	public fun <init> ()V
	public final fun execute ()V
	public abstract fun getIgnoredModules ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getModuleLinkFiles ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
}

public abstract class modular/core/tasks/CollateModuleTypes : org/gradle/api/DefaultTask, modular/core/tasks/TaskWithOutputFile {
	public fun <init> ()V
	public final fun execute ()V
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getProjectTypeFiles ()Lorg/gradle/api/file/ConfigurableFileCollection;
}

public abstract interface class modular/core/tasks/ModularGenerationTask : org/gradle/api/Task {
	public abstract fun getPrintFilesToConsole ()Lorg/gradle/api/provider/Property;
}

public abstract interface class modular/core/tasks/TaskWithOutputFile : org/gradle/api/Task {
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
}

public abstract class modular/core/tasks/WriteModuleLinks : org/gradle/api/DefaultTask, modular/core/tasks/TaskWithOutputFile {
	public fun <init> ()V
	public final fun execute ()V
	public abstract fun getLinkTypes ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getModuleLinks ()Lorg/gradle/api/provider/MapProperty;
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getThisPath ()Lorg/gradle/api/provider/Property;
}

public abstract class modular/core/tasks/WriteModuleTree : org/gradle/api/DefaultTask, modular/core/tasks/TaskWithOutputFile {
	public fun <init> ()V
	public final fun execute ()V
	public abstract fun getAlsoTraverseUpwards ()Lorg/gradle/api/provider/Property;
	public abstract fun getCollatedLinks ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getThisPath ()Lorg/gradle/api/provider/Property;
}

public abstract class modular/core/tasks/WriteModuleType : org/gradle/api/DefaultTask, modular/core/tasks/TaskWithOutputFile {
	public fun <init> ()V
	public final fun execute ()V
	public abstract fun getModuleType ()Lorg/gradle/api/provider/Property;
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getProjectPath ()Lorg/gradle/api/provider/Property;
}

public abstract class modular/core/tasks/WriteReadme : org/gradle/api/DefaultTask, modular/core/tasks/ModularGenerationTask, modular/core/tasks/TaskWithOutputFile {
	public fun <init> ()V
	public final fun execute ()V
	public abstract fun getChartFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getLegendFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getProjectPath ()Lorg/gradle/api/provider/Property;
	public abstract fun getReadmeFile ()Lorg/gradle/api/file/RegularFileProperty;
}

public final class org/gradle/kotlin/dsl/ModuleTypeDslKt {
	public static final fun androidApp (Lmodular/core/NamedModuleTypeContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun androidApp (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun androidApp (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun androidApp (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun androidApp$default (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun androidLibrary (Lmodular/core/NamedModuleTypeContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun androidLibrary (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun androidLibrary (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun androidLibrary (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun androidLibrary$default (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun builtIns (Lmodular/core/NamedModuleTypeContainer;)V
	public static final fun java (Lmodular/core/NamedModuleTypeContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun java (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun java (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun java (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun java$default (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun kotlinJvm (Lmodular/core/NamedModuleTypeContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun kotlinJvm (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun kotlinJvm (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun kotlinJvm (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun kotlinJvm$default (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun kotlinMultiplatform (Lmodular/core/NamedModuleTypeContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun kotlinMultiplatform (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun kotlinMultiplatform (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun kotlinMultiplatform (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun kotlinMultiplatform$default (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun other (Lmodular/core/NamedModuleTypeContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun other (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun other (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun other (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun other$default (Lmodular/core/NamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
}

