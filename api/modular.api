public abstract interface annotation class modular/gradle/ModularDsl : java/lang/annotation/Annotation {
}

public abstract interface class modular/gradle/ModularExtension {
	public abstract fun experimental (Lorg/gradle/api/Action;)V
	public abstract fun getExperimental ()Lmodular/spec/ExperimentalSpec;
	public abstract fun getGenerateOnSync ()Lorg/gradle/api/provider/Property;
	public abstract fun getIgnoredConfigs ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getIgnoredModules ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getModulePathTransforms ()Lmodular/spec/ModulePathTransformSpec;
	public abstract fun getModuleTypes ()Lorg/gradle/api/NamedDomainObjectContainer;
	public abstract fun getOutputs ()Lmodular/spec/OutputSpec;
	public abstract fun getSeparator ()Lorg/gradle/api/provider/Property;
	public abstract fun getSpecs ()Lorg/gradle/api/NamedDomainObjectContainer;
	public abstract fun getSupportUpwardsTraversal ()Lorg/gradle/api/provider/Property;
	public abstract fun graphViz ()V
	public abstract fun graphViz (Lorg/gradle/api/Action;)V
	public abstract fun modulePathTransforms (Lorg/gradle/api/Action;)V
	public abstract fun moduleTypes (Lorg/gradle/api/Action;)V
	public abstract fun outputs (Lorg/gradle/api/Action;)V
	public abstract fun specs (Lorg/gradle/api/Action;)V
}

public final class modular/gradle/ModularLeafPlugin : org/gradle/api/Plugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public final class modular/gradle/ModularTrunkPlugin : org/gradle/api/Plugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public abstract interface class modular/graphviz/spec/GraphVizChartSpec {
	public abstract fun arrowHead (Ljava/lang/String;)V
	public abstract fun arrowHead (Lmodular/spec/ArrowType;)V
	public abstract fun arrowTail (Ljava/lang/String;)V
	public abstract fun arrowTail (Lmodular/spec/ArrowType;)V
	public abstract fun dir (Ljava/lang/String;)V
	public abstract fun dir (Lmodular/spec/Dir;)V
	public abstract fun getArrowHead ()Lorg/gradle/api/provider/Property;
	public abstract fun getArrowTail ()Lorg/gradle/api/provider/Property;
	public abstract fun getDir ()Lorg/gradle/api/provider/Property;
	public abstract fun getDpi ()Lorg/gradle/api/provider/Property;
	public abstract fun getFontSize ()Lorg/gradle/api/provider/Property;
	public abstract fun getLayoutEngine ()Lorg/gradle/api/provider/Property;
	public abstract fun getRankDir ()Lorg/gradle/api/provider/Property;
	public abstract fun getRankSep ()Lorg/gradle/api/provider/Property;
	public abstract fun layoutEngine (Ljava/lang/String;)V
	public abstract fun layoutEngine (Lmodular/spec/LayoutEngine;)V
	public abstract fun rankDir (Ljava/lang/String;)V
	public abstract fun rankDir (Lmodular/spec/RankDir;)V
}

public abstract interface class modular/graphviz/spec/GraphVizFileFormatSpec : org/gradle/api/provider/SetProperty {
	public abstract fun add (Ljava/lang/String;)V
	public abstract fun add (Lorg/gradle/api/provider/Provider;)V
	public abstract fun addAll (Ljava/lang/Iterable;)V
	public abstract fun addAll (Lorg/gradle/api/provider/Provider;)V
	public abstract fun addAll ([Ljava/lang/String;)V
	public fun canon ()V
	public fun cmap ()V
	public fun cmapx ()V
	public fun cmapxNp ()V
	public fun dot ()V
	public fun dotJson ()V
	public fun eps ()V
	public fun fig ()V
	public fun gd ()V
	public fun gd2 ()V
	public fun gif ()V
	public fun gv ()V
	public fun imap ()V
	public fun imapNp ()V
	public fun ismap ()V
	public fun jpe ()V
	public fun jpeg ()V
	public fun jpg ()V
	public fun json ()V
	public fun json0 ()V
	public fun mp ()V
	public fun pdf ()V
	public fun pic ()V
	public fun plain ()V
	public fun plainExt ()V
	public fun png ()V
	public fun pov ()V
	public fun ps ()V
	public fun ps2 ()V
	public fun svg ()V
	public fun svgz ()V
	public fun tk ()V
	public fun vdx ()V
	public fun vml ()V
	public fun vmlz ()V
	public fun vrml ()V
	public fun wbmp ()V
	public fun webp ()V
	public fun x11 ()V
	public fun xdot ()V
	public fun xdot12 ()V
	public fun xdot14 ()V
	public fun xdotJson ()V
	public fun xlib ()V
}

public final class modular/graphviz/spec/GraphVizFileFormatSpec$DefaultImpls {
	public static fun canon (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun cmap (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun cmapx (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun cmapxNp (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun dot (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun dotJson (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun eps (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun fig (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun gd (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun gd2 (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun gif (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun gv (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun imap (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun imapNp (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun ismap (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun jpe (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun jpeg (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun jpg (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun json (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun json0 (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun mp (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun pdf (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun pic (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun plain (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun plainExt (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun png (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun pov (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun ps (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun ps2 (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun svg (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun svgz (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun tk (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun vdx (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun vml (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun vmlz (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun vrml (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun wbmp (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun webp (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun x11 (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun xdot (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun xdot12 (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun xdot14 (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun xdotJson (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
	public static fun xlib (Lmodular/graphviz/spec/GraphVizFileFormatSpec;)V
}

public abstract interface class modular/graphviz/spec/GraphVizLegendSpec {
	public abstract fun getCellBorder ()Lorg/gradle/api/provider/Property;
	public abstract fun getCellPadding ()Lorg/gradle/api/provider/Property;
	public abstract fun getCellSpacing ()Lorg/gradle/api/provider/Property;
	public abstract fun getTableBorder ()Lorg/gradle/api/provider/Property;
}

public abstract interface class modular/graphviz/spec/GraphVizSpec : modular/spec/Spec {
	public abstract fun fileFormats (Lorg/gradle/api/Action;)V
	public abstract fun getChart ()Lmodular/graphviz/spec/GraphVizChartSpec;
	public abstract fun getFileExtension ()Lorg/gradle/api/provider/Property;
	public abstract fun getFileFormats ()Lmodular/graphviz/spec/GraphVizFileFormatSpec;
	public abstract fun getLegend ()Lmodular/graphviz/spec/GraphVizLegendSpec;
	public abstract fun getPathToDotCommand ()Lorg/gradle/api/provider/Property;
	public abstract fun legend ()Lmodular/graphviz/spec/GraphVizLegendSpec;
	public abstract fun legend (Lorg/gradle/api/Action;)V
	public abstract fun setLegend (Lmodular/graphviz/spec/GraphVizLegendSpec;)V
}

public final class modular/graphviz/spec/GraphVizSpec$DefaultImpls {
	public static fun chart (Lmodular/graphviz/spec/GraphVizSpec;Lorg/gradle/api/Action;)V
}

public abstract class modular/graphviz/tasks/CheckDotFileTask : org/gradle/api/DefaultTask {
	public static final field Companion Lmodular/graphviz/tasks/CheckDotFileTask$Companion;
	public fun <init> ()V
	public final fun execute ()V
	public abstract fun getActualDotFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getExpectedDotFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getTaskPath ()Lorg/gradle/api/provider/Property;
}

public final class modular/graphviz/tasks/CheckDotFileTask$Companion {
	public final fun register (Lorg/gradle/api/Project;Lorg/gradle/api/tasks/TaskProvider;Lorg/gradle/api/file/RegularFile;)Lorg/gradle/api/tasks/TaskProvider;
}

public abstract class modular/graphviz/tasks/GenerateGraphvizFileTask : org/gradle/api/DefaultTask, modular/tasks/ModularGenerationTask, modular/tasks/TaskWithOutputFile {
	public static final field Companion Lmodular/graphviz/tasks/GenerateGraphvizFileTask$Companion;
	public fun <init> ()V
	public final fun execute ()V
	public fun getDescription ()Ljava/lang/String;
	public abstract fun getEngine ()Lorg/gradle/api/provider/Property;
	public abstract fun getExperimental ()Lmodular/spec/ExperimentalFlags;
	public abstract fun getGraphViz ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getOutputFormat ()Lorg/gradle/api/provider/Property;
	public abstract fun getPathToDotCommand ()Lorg/gradle/api/provider/Property;
}

public final class modular/graphviz/tasks/GenerateGraphvizFileTask$Companion {
	public final fun get (Lorg/gradle/api/Project;Ljava/lang/String;)Lorg/gradle/api/tasks/TaskProvider;
}

public abstract class modular/graphviz/tasks/GenerateLegendDotFileTask : org/gradle/api/DefaultTask, modular/tasks/ModularGenerationTask, modular/tasks/TaskWithOutputFile, modular/tasks/TaskWithSeparator {
	public static final field Companion Lmodular/graphviz/tasks/GenerateLegendDotFileTask$Companion;
	public static final field TASK_NAME Ljava/lang/String;
	public fun <init> ()V
	public final fun execute ()V
	public abstract fun getCellBorder ()Lorg/gradle/api/provider/Property;
	public abstract fun getCellPadding ()Lorg/gradle/api/provider/Property;
	public abstract fun getCellSpacing ()Lorg/gradle/api/provider/Property;
	public abstract fun getModuleTypes ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getSeparator ()Lorg/gradle/api/provider/Property;
	public abstract fun getTableBorder ()Lorg/gradle/api/provider/Property;
}

public final class modular/graphviz/tasks/GenerateLegendDotFileTask$Companion {
	public final fun get (Lorg/gradle/api/Project;)Lorg/gradle/api/tasks/TaskProvider;
}

public abstract class modular/graphviz/tasks/GenerateModulesDotFileTask : org/gradle/api/DefaultTask, modular/tasks/ModularGenerationTask, modular/tasks/TaskWithOutputFile, modular/tasks/TaskWithSeparator {
	public static final field Companion Lmodular/graphviz/tasks/GenerateModulesDotFileTask$Companion;
	public static final field TASK_NAME Ljava/lang/String;
	public fun <init> ()V
	public final fun execute ()V
	public abstract fun getArrowHead ()Lorg/gradle/api/provider/Property;
	public abstract fun getArrowTail ()Lorg/gradle/api/provider/Property;
	public abstract fun getDir ()Lorg/gradle/api/provider/Property;
	public abstract fun getDpi ()Lorg/gradle/api/provider/Property;
	public abstract fun getFontSize ()Lorg/gradle/api/provider/Property;
	public abstract fun getLinksFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getModuleTypesFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getPrintOutput ()Lorg/gradle/api/provider/Property;
	public abstract fun getRankDir ()Lorg/gradle/api/provider/Property;
	public abstract fun getRankSep ()Lorg/gradle/api/provider/Property;
	public abstract fun getReplacements ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getSeparator ()Lorg/gradle/api/provider/Property;
	public abstract fun getThisPath ()Lorg/gradle/api/provider/Property;
}

public final class modular/graphviz/tasks/GenerateModulesDotFileTask$Companion {
	public final fun register (Lorg/gradle/api/Project;Ljava/lang/String;Lmodular/spec/ModulePathTransformSpec;Lmodular/graphviz/spec/GraphVizChartSpec;Lorg/gradle/api/file/RegularFile;Z)Lorg/gradle/api/tasks/TaskProvider;
}

public final class modular/internal/Replacement : java/io/Serializable {
	public fun <init> (Lkotlin/text/Regex;Ljava/lang/String;)V
	public final fun getPattern ()Lkotlin/text/Regex;
	public final fun getReplacement ()Ljava/lang/String;
}

public final class modular/spec/ArrowType : java/lang/Enum, modular/spec/StringEnum {
	public static final field Box Lmodular/spec/ArrowType;
	public static final field Crow Lmodular/spec/ArrowType;
	public static final field Diamond Lmodular/spec/ArrowType;
	public static final field Dot Lmodular/spec/ArrowType;
	public static final field Ediamond Lmodular/spec/ArrowType;
	public static final field Empty Lmodular/spec/ArrowType;
	public static final field HalfOpen Lmodular/spec/ArrowType;
	public static final field Inv Lmodular/spec/ArrowType;
	public static final field InvEmpty Lmodular/spec/ArrowType;
	public static final field Invdot Lmodular/spec/ArrowType;
	public static final field Invodot Lmodular/spec/ArrowType;
	public static final field None Lmodular/spec/ArrowType;
	public static final field Normal Lmodular/spec/ArrowType;
	public static final field Obox Lmodular/spec/ArrowType;
	public static final field Odiamond Lmodular/spec/ArrowType;
	public static final field Odot Lmodular/spec/ArrowType;
	public static final field Open Lmodular/spec/ArrowType;
	public static final field Tee Lmodular/spec/ArrowType;
	public static final field Vee Lmodular/spec/ArrowType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lmodular/spec/ArrowType;
	public static fun values ()[Lmodular/spec/ArrowType;
}

public final class modular/spec/Dir : java/lang/Enum, modular/spec/StringEnum {
	public static final field Back Lmodular/spec/Dir;
	public static final field Both Lmodular/spec/Dir;
	public static final field Forward Lmodular/spec/Dir;
	public static final field None Lmodular/spec/Dir;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lmodular/spec/Dir;
	public static fun values ()[Lmodular/spec/Dir;
}

public abstract class modular/spec/ExperimentalFlags {
	public fun <init> ()V
	public abstract fun getAdjustSvgViewBox ()Lorg/gradle/api/provider/Property;
}

public abstract interface class modular/spec/ExperimentalSpec {
	public abstract fun getAdjustSvgViewBox ()Lorg/gradle/api/provider/Property;
}

public final class modular/spec/LayoutEngine : java/lang/Enum, modular/spec/StringEnum {
	public static final field Circo Lmodular/spec/LayoutEngine;
	public static final field Dot Lmodular/spec/LayoutEngine;
	public static final field Fdp Lmodular/spec/LayoutEngine;
	public static final field Neato Lmodular/spec/LayoutEngine;
	public static final field Nop Lmodular/spec/LayoutEngine;
	public static final field Nop2 Lmodular/spec/LayoutEngine;
	public static final field Osage Lmodular/spec/LayoutEngine;
	public static final field Patchwork Lmodular/spec/LayoutEngine;
	public static final field Sfdp Lmodular/spec/LayoutEngine;
	public static final field TwoPi Lmodular/spec/LayoutEngine;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lmodular/spec/LayoutEngine;
	public static fun values ()[Lmodular/spec/LayoutEngine;
}

public abstract interface class modular/spec/ModulePathTransformSpec : org/gradle/api/provider/SetProperty {
	public abstract fun add (Lmodular/internal/Replacement;)V
	public abstract fun add (Lorg/gradle/api/provider/Provider;)V
	public abstract fun addAll (Ljava/lang/Iterable;)V
	public abstract fun addAll (Lorg/gradle/api/provider/Provider;)V
	public abstract fun addAll ([Lmodular/internal/Replacement;)V
	public abstract fun remove (Ljava/lang/String;)V
	public abstract fun remove (Lkotlin/text/Regex;)V
	public abstract fun replace (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun replace (Lkotlin/text/Regex;Ljava/lang/String;)V
}

public abstract interface class modular/spec/ModuleType {
	public abstract fun getColor ()Lorg/gradle/api/provider/Property;
	public abstract fun getHasPluginId ()Lorg/gradle/api/provider/Property;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getPathContains ()Lorg/gradle/api/provider/Property;
	public abstract fun getPathMatches ()Lorg/gradle/api/provider/Property;
}

public final class modular/spec/ModuleTypeModel : java/io/Serializable {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lmodular/spec/ModuleTypeModel;
	public static synthetic fun copy$default (Lmodular/spec/ModuleTypeModel;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lmodular/spec/ModuleTypeModel;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColor ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class modular/spec/OutputSpec {
	public abstract fun getChartRootFilename ()Lorg/gradle/api/provider/Property;
	public abstract fun getLegendRootFilename ()Lorg/gradle/api/provider/Property;
	public abstract fun saveChartsInSubmoduleDir ()V
	public abstract fun saveChartsRelativeToSubmodule (Ljava/lang/String;)V
	public abstract fun saveLegendsInRootDir ()V
	public abstract fun saveLegendsRelativeToRootModule (Ljava/lang/String;)V
}

public final class modular/spec/RankDir : java/lang/Enum, modular/spec/StringEnum {
	public static final field BottomToTop Lmodular/spec/RankDir;
	public static final field LeftToRight Lmodular/spec/RankDir;
	public static final field RightToLeft Lmodular/spec/RankDir;
	public static final field TopToBottom Lmodular/spec/RankDir;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lmodular/spec/RankDir;
	public static fun values ()[Lmodular/spec/RankDir;
}

public abstract interface class modular/spec/Spec {
	public fun chart (Lorg/gradle/api/Action;)V
	public abstract fun getChart ()Ljava/lang/Object;
	public abstract fun getFileExtension ()Lorg/gradle/api/provider/Property;
	public abstract fun getLegend ()Ljava/lang/Object;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun legend ()Ljava/lang/Object;
	public abstract fun legend (Lorg/gradle/api/Action;)V
	public abstract fun setLegend (Ljava/lang/Object;)V
}

public final class modular/spec/Spec$DefaultImpls {
	public static fun chart (Lmodular/spec/Spec;Lorg/gradle/api/Action;)V
}

public abstract class modular/tasks/CalculateModuleTreeTask : org/gradle/api/DefaultTask, modular/tasks/TaskWithOutputFile, modular/tasks/TaskWithSeparator {
	public static final field Companion Lmodular/tasks/CalculateModuleTreeTask$Companion;
	public fun <init> ()V
	public final fun execute ()V
	public abstract fun getCollatedLinks ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getSeparator ()Lorg/gradle/api/provider/Property;
	public abstract fun getSupportUpwardsTraversal ()Lorg/gradle/api/provider/Property;
	public abstract fun getThisPath ()Lorg/gradle/api/provider/Property;
}

public final class modular/tasks/CalculateModuleTreeTask$Companion {
	public final fun get (Lorg/gradle/api/Project;)Lorg/gradle/api/tasks/TaskProvider;
	public final fun register (Lorg/gradle/api/Project;Lmodular/gradle/ModularExtension;)Lorg/gradle/api/tasks/TaskProvider;
}

public abstract class modular/tasks/CollateModuleLinksTask : org/gradle/api/DefaultTask, modular/tasks/TaskWithOutputFile, modular/tasks/TaskWithSeparator {
	public static final field Companion Lmodular/tasks/CollateModuleLinksTask$Companion;
	public fun <init> ()V
	public final fun execute ()V
	public abstract fun getIgnoredModules ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getModuleLinkFiles ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getSeparator ()Lorg/gradle/api/provider/Property;
}

public final class modular/tasks/CollateModuleLinksTask$Companion {
	public final fun get (Lorg/gradle/api/Project;)Lorg/gradle/api/tasks/TaskProvider;
	public final fun register (Lorg/gradle/api/Project;Lmodular/gradle/ModularExtension;)Lorg/gradle/api/tasks/TaskProvider;
}

public abstract class modular/tasks/CollateModuleTypesTask : org/gradle/api/DefaultTask, modular/tasks/TaskWithOutputFile, modular/tasks/TaskWithSeparator {
	public static final field Companion Lmodular/tasks/CollateModuleTypesTask$Companion;
	public fun <init> ()V
	public final fun execute ()V
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getProjectTypeFiles ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getSeparator ()Lorg/gradle/api/provider/Property;
}

public final class modular/tasks/CollateModuleTypesTask$Companion {
	public final fun get (Lorg/gradle/api/Project;)Lorg/gradle/api/tasks/TaskProvider;
	public final fun register (Lorg/gradle/api/Project;)Lorg/gradle/api/tasks/TaskProvider;
}

public abstract class modular/tasks/DumpModuleLinksTask : org/gradle/api/DefaultTask, modular/tasks/TaskWithOutputFile, modular/tasks/TaskWithSeparator {
	public static final field Companion Lmodular/tasks/DumpModuleLinksTask$Companion;
	public fun <init> ()V
	public final fun execute ()V
	public abstract fun getModuleLinks ()Lorg/gradle/api/provider/MapProperty;
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getSeparator ()Lorg/gradle/api/provider/Property;
	public abstract fun getThisPath ()Lorg/gradle/api/provider/Property;
}

public final class modular/tasks/DumpModuleLinksTask$Companion {
	public final fun get (Lorg/gradle/api/Project;)Lorg/gradle/api/tasks/TaskProvider;
	public final fun register (Lorg/gradle/api/Project;Lmodular/gradle/ModularExtension;)Lorg/gradle/api/tasks/TaskProvider;
}

public abstract class modular/tasks/DumpModuleTypeTask : org/gradle/api/DefaultTask, modular/tasks/TaskWithOutputFile, modular/tasks/TaskWithSeparator {
	public static final field Companion Lmodular/tasks/DumpModuleTypeTask$Companion;
	public static final field NAME Ljava/lang/String;
	public fun <init> ()V
	public final fun execute ()V
	public abstract fun getAllModuleTypes ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getModuleType ()Lorg/gradle/api/provider/Property;
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getProjectPath ()Lorg/gradle/api/provider/Property;
	public abstract fun getSeparator ()Lorg/gradle/api/provider/Property;
}

public final class modular/tasks/DumpModuleTypeTask$Companion {
	public final fun get (Lorg/gradle/api/Project;)Lorg/gradle/api/tasks/TaskProvider;
	public final fun register (Lorg/gradle/api/Project;Lmodular/gradle/ModularExtension;)Lorg/gradle/api/tasks/TaskProvider;
}

public abstract interface class modular/tasks/ModularGenerationTask : org/gradle/api/Task {
}

public abstract interface class modular/tasks/TaskWithOutputFile : org/gradle/api/Task {
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
}

public abstract interface class modular/tasks/TaskWithSeparator : org/gradle/api/Task {
	public abstract fun getSeparator ()Lorg/gradle/api/provider/Property;
}

public abstract class modular/tasks/WriteReadmeTask : org/gradle/api/DefaultTask {
	public static final field Companion Lmodular/tasks/WriteReadmeTask$Companion;
	public fun <init> ()V
	public final fun execute ()V
	public abstract fun getLegendPngRelativePath ()Lorg/gradle/api/provider/Property;
	public abstract fun getProjectPath ()Lorg/gradle/api/provider/Property;
	public abstract fun getReadmeFile ()Lorg/gradle/api/file/RegularFileProperty;
}

public final class modular/tasks/WriteReadmeTask$Companion {
	public final fun register (Lorg/gradle/api/Project;)Lorg/gradle/api/tasks/TaskProvider;
}

public final class org/gradle/kotlin/dsl/ModuleTypeDslKt {
	public static final fun androidApp (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun androidApp (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun androidApp (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun androidApp$default (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun androidLibrary (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun androidLibrary (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun androidLibrary (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun androidLibrary$default (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun builtIns (Lorg/gradle/api/NamedDomainObjectContainer;)V
	public static final fun java (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun java (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun java (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun java$default (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun kotlinJvm (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun kotlinJvm (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun kotlinJvm (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun kotlinJvm$default (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun kotlinMultiplatform (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun kotlinMultiplatform (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun kotlinMultiplatform (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun kotlinMultiplatform$default (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun other (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun other (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun other (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun other$default (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun registerByPathContains (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun registerByPathMatches (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;Ljava/lang/String;Lkotlin/text/Regex;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun registerByPluginId (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
}

