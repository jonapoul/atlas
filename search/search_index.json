{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Atlas Gradle Plugin","text":"<p>Atlas is a Gradle plugin for generating, configuring and curating diagrams to illustrate your project's module structure:</p> <ol> <li>Fully supports Gradle 9 and its configuration caching.</li> <li>Supports three separate frameworks as outputs:<ul> <li>D2: Official docs here</li> <li>Graphviz: Official docs here</li> <li>Mermaid: Official docs here</li> </ul> </li> <li>Offers wide-ranging APIs for customizing your charts</li> <li>Supports <code>gradle check</code>-ing your generated diagrams, to validate that they match the current state of your project</li> <li>Supports attaching the chart generation to IntelliJ's sync button, so you don't even need to run it manually.</li> </ol> <p>Inspiration</p> <p>This project was built as a spiritial successor to com.vanniktech.dependency.graph.generator project - but with more configurability and targeting modern Gradle releases.</p>"},{"location":"#installation","title":"Installation","text":"<p>For proper release builds, you want to add the central repository to your <code>settings.gradle.kts</code> file:</p> <pre><code>pluginManagement {\n  repositories {\n    mavenCentral()\n  }\n}\n</code></pre> <p>Or for pre-release snapshots builds (the latest state of the main branch in this repo), add the Maven Central snapshots repo:</p> <pre><code>pluginManagement {\n  repositories {\n    maven(\"https://central.sonatype.com/repository/maven-snapshots/\")\n  }\n}\n</code></pre> <p>Then in your root <code>build.gradle.kts</code> file:</p> <pre><code>plugins {\n  // \ud83d\udea8\ud83d\udea8\ud83d\udea8 WARNING: You can only apply one of these at a time! \ud83d\udea8\ud83d\udea8\ud83d\udea8\n  id(\"dev.jonpoulton.atlas.d2\") version \"x.y.z\"\n  id(\"dev.jonpoulton.atlas.graphviz\") version \"x.y.z\"\n  id(\"dev.jonpoulton.atlas.mermaid\") version \"x.y.z\"\n}\n</code></pre> <p>Then generate your diagrams by running:</p> <pre><code>gradle atlasGenerate\n</code></pre> <p>or validate them by running:</p> <pre><code>gradle atlasCheck\n</code></pre> <p>That's all you need to get it working! See the next pages for further configuration of each of the above plugins.</p>"},{"location":"samples/","title":"Samples","text":"AB <p>Tab A contents</p> <p>Tab B contents</p>"},{"location":"usage-common/","title":"Configuration","text":""},{"location":"usage-common/#overview","title":"Overview","text":"<p>Configuration is primarily done via the <code>atlas</code> Gradle extension function, accessible in your root build file. See here for the KDoc, or here for the source file.</p> <pre><code>// none of these are required - these values are the defaults\natlas {\n  alsoTraverseUpwards = false\n  checkOutputs = true\n  displayLinkLabels = false\n  generateOnSync = false\n  groupModules = false\n  ignoredConfigs = setOf(\"debug\", \"kover\", \"ksp\", \"test\")\n  ignoredModules = emptySet&lt;String&gt;()\n  printFilesToConsole = false\n\n  pathTransforms {\n    // ...\n  }\n\n  moduleTypes {\n    // ...\n  }\n\n  linkTypes {\n    // ...\n  }\n}\n</code></pre> <p>Alternatively, if calling from a <code>buildSrc</code> Kotlin file (or similar), access with:</p> <pre><code>project.extensions.configure&lt;AtlasExtension&gt; {\n  // ...\n}\n</code></pre> <p>Any other configs beyond these are specific to the particular plugin you applied, see:</p> <ul> <li>Graphviz</li> <li>D2</li> <li>Mermaid</li> </ul>"},{"location":"usage-common/#todo","title":"TODO","text":"<p>TODO: Draw the rest of the owl</p>"},{"location":"usage-d2/","title":"D2","text":"<p>TBC</p>"},{"location":"usage-graphviz/","title":"Graphviz","text":"<p>TBC</p>"},{"location":"usage-mermaid/","title":"Mermaid","text":"<p>TBC</p>"}]}