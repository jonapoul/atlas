public final class modular/mermaid/ConsiderModelOrder : java/lang/Enum, modular/core/internal/StringEnum {
	public static final field NodesAndEdges Lmodular/mermaid/ConsiderModelOrder;
	public static final field None Lmodular/mermaid/ConsiderModelOrder;
	public static final field PreferEdges Lmodular/mermaid/ConsiderModelOrder;
	public static final field PreferNodes Lmodular/mermaid/ConsiderModelOrder;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lmodular/mermaid/ConsiderModelOrder;
	public static fun values ()[Lmodular/mermaid/ConsiderModelOrder;
}

public final class modular/mermaid/CycleBreakingStrategy : java/lang/Enum, modular/core/internal/StringEnum {
	public static final field DepthFirst Lmodular/mermaid/CycleBreakingStrategy;
	public static final field Greedy Lmodular/mermaid/CycleBreakingStrategy;
	public static final field GreedyModelOrder Lmodular/mermaid/CycleBreakingStrategy;
	public static final field Interactive Lmodular/mermaid/CycleBreakingStrategy;
	public static final field ModelOrder Lmodular/mermaid/CycleBreakingStrategy;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lmodular/mermaid/CycleBreakingStrategy;
	public static fun values ()[Lmodular/mermaid/CycleBreakingStrategy;
}

public abstract interface class modular/mermaid/ElkLayoutSpec : modular/mermaid/MermaidLayoutSpec {
	public abstract fun getConsiderModelOrder ()Lmodular/mermaid/ConsiderModelOrder;
	public abstract fun getCycleBreakingStrategy ()Lmodular/mermaid/CycleBreakingStrategy;
	public abstract fun getForceNodeModelOrder ()Ljava/lang/Boolean;
	public abstract fun getMergeEdges ()Ljava/lang/Boolean;
	public abstract fun getNodePlacementStrategy ()Lmodular/mermaid/NodePlacementStrategy;
	public abstract fun setConsiderModelOrder (Lmodular/mermaid/ConsiderModelOrder;)V
	public abstract fun setCycleBreakingStrategy (Lmodular/mermaid/CycleBreakingStrategy;)V
	public abstract fun setForceNodeModelOrder (Ljava/lang/Boolean;)V
	public abstract fun setMergeEdges (Ljava/lang/Boolean;)V
	public abstract fun setNodePlacementStrategy (Lmodular/mermaid/NodePlacementStrategy;)V
}

public final class modular/mermaid/LinkStyle : java/lang/Enum, modular/core/internal/StringEnum {
	public static final field Basic Lmodular/mermaid/LinkStyle;
	public static final field Bold Lmodular/mermaid/LinkStyle;
	public static final field Dashed Lmodular/mermaid/LinkStyle;
	public static final field Invisible Lmodular/mermaid/LinkStyle;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lmodular/mermaid/LinkStyle;
	public static fun values ()[Lmodular/mermaid/LinkStyle;
}

public final class modular/mermaid/Look : java/lang/Enum, modular/core/internal/StringEnum {
	public static final field Classic Lmodular/mermaid/Look;
	public static final field HandDrawn Lmodular/mermaid/Look;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lmodular/mermaid/Look;
	public static fun values ()[Lmodular/mermaid/Look;
}

public final class modular/mermaid/MermaidConfig : java/io/Serializable {
	public static final field Companion Lmodular/mermaid/MermaidConfig$Companion;
	public fun <init> (Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Lmodular/mermaid/Look;Lmodular/mermaid/Theme;Z)V
	public final fun getAnimateLinks ()Z
	public final fun getLayout ()Ljava/lang/String;
	public final fun getLayoutProperties ()Ljava/util/Map;
	public final fun getLook ()Lmodular/mermaid/Look;
	public final fun getTheme ()Lmodular/mermaid/Theme;
	public final fun getThemeVariables ()Ljava/util/Map;
}

public final synthetic class modular/mermaid/MermaidConfig$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lmodular/mermaid/MermaidConfig$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lmodular/mermaid/MermaidConfig;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lmodular/mermaid/MermaidConfig;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class modular/mermaid/MermaidConfig$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class modular/mermaid/MermaidLayoutSpec : modular/core/internal/PropertiesSpec {
	public abstract fun getName ()Lorg/gradle/api/provider/Property;
}

public abstract interface class modular/mermaid/MermaidModularExtension : modular/core/ModularExtension {
	public abstract fun getMermaid ()Lmodular/mermaid/MermaidSpec;
	public abstract fun linkTypes (Lorg/gradle/api/Action;)V
	public abstract fun mermaid (Lorg/gradle/api/Action;)Lmodular/mermaid/MermaidSpec;
	public abstract fun moduleTypes (Lorg/gradle/api/Action;)V
}

public final class modular/mermaid/MermaidModularPlugin : modular/core/ModularPlugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
	public synthetic fun createExtension (Lorg/gradle/api/Project;)Lmodular/core/internal/ModularExtensionImpl;
	public synthetic fun getExtension (Lorg/gradle/api/Project;)Lmodular/core/internal/ModularExtensionImpl;
}

public abstract interface class modular/mermaid/MermaidModuleTypeSpec : modular/core/ModuleTypeSpec {
	public abstract fun getFontColor ()Ljava/lang/String;
	public abstract fun getFontSize ()Ljava/lang/String;
	public abstract fun getStroke ()Ljava/lang/String;
	public abstract fun getStrokeDashArray ()Ljava/lang/String;
	public abstract fun getStrokeWidth ()Ljava/lang/String;
	public abstract fun put (Ljava/lang/String;Ljava/lang/Object;)V
	public abstract fun setFontColor (Ljava/lang/String;)V
	public abstract fun setFontSize (Ljava/lang/String;)V
	public abstract fun setStroke (Ljava/lang/String;)V
	public abstract fun setStrokeDashArray (Ljava/lang/String;)V
	public abstract fun setStrokeWidth (Ljava/lang/String;)V
}

public abstract interface class modular/mermaid/MermaidNamedLinkTypeContainer : modular/core/NamedLinkTypeContainer {
	public fun invoke (Ljava/lang/String;Lmodular/mermaid/LinkStyle;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun invoke$default (Lmodular/mermaid/MermaidNamedLinkTypeContainer;Ljava/lang/String;Lmodular/mermaid/LinkStyle;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
}

public final class modular/mermaid/MermaidNamedLinkTypeContainer$DefaultImpls {
	public static fun invoke (Lmodular/mermaid/MermaidNamedLinkTypeContainer;Ljava/lang/String;Lmodular/mermaid/LinkStyle;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun invoke$default (Lmodular/mermaid/MermaidNamedLinkTypeContainer;Ljava/lang/String;Lmodular/mermaid/LinkStyle;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
}

public abstract interface class modular/mermaid/MermaidNamedModuleTypeContainer : modular/core/NamedModuleTypeContainer {
}

public final class modular/mermaid/MermaidNamedModuleTypeContainer$DefaultImpls {
	public static fun registerByPathContains (Lmodular/mermaid/MermaidNamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static fun registerByPathMatches (Lmodular/mermaid/MermaidNamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Lkotlin/text/Regex;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static fun registerByPluginId (Lmodular/mermaid/MermaidNamedModuleTypeContainer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/NamedDomainObjectProvider;
}

public abstract interface class modular/mermaid/MermaidSpec : modular/core/ModularSpec {
	public abstract fun elk (Lorg/gradle/api/Action;)V
	public static synthetic fun elk$default (Lmodular/mermaid/MermaidSpec;Lorg/gradle/api/Action;ILjava/lang/Object;)V
	public abstract fun getAnimateLinks ()Lorg/gradle/api/provider/Property;
	public abstract fun getLayout ()Lmodular/mermaid/MermaidLayoutSpec;
	public abstract fun getLook ()Lorg/gradle/api/provider/Property;
	public abstract fun getTheme ()Lorg/gradle/api/provider/Property;
	public abstract fun getThemeVariables ()Lmodular/mermaid/MermaidThemeVariablesSpec;
	public abstract fun layout (Lorg/gradle/api/Action;)V
	public abstract fun themeVariables (Lorg/gradle/api/Action;)V
}

public final class modular/mermaid/MermaidSpec$DefaultImpls {
	public static synthetic fun elk$default (Lmodular/mermaid/MermaidSpec;Lorg/gradle/api/Action;ILjava/lang/Object;)V
}

public abstract interface class modular/mermaid/MermaidThemeVariablesSpec : modular/core/internal/PropertiesSpec {
	public abstract fun getBackground ()Ljava/lang/String;
	public abstract fun getDarkMode ()Ljava/lang/Boolean;
	public abstract fun getFontFamily ()Ljava/lang/String;
	public abstract fun getFontSize ()Ljava/lang/String;
	public abstract fun getLineColor ()Ljava/lang/String;
	public abstract fun getPrimaryBorderColor ()Ljava/lang/String;
	public abstract fun getPrimaryColor ()Ljava/lang/String;
	public abstract fun getPrimaryTextColor ()Ljava/lang/String;
	public abstract fun getSecondaryColor ()Ljava/lang/String;
	public abstract fun getTertiaryColor ()Ljava/lang/String;
	public abstract fun setBackground (Ljava/lang/String;)V
	public abstract fun setDarkMode (Ljava/lang/Boolean;)V
	public abstract fun setFontFamily (Ljava/lang/String;)V
	public abstract fun setFontSize (Ljava/lang/String;)V
	public abstract fun setLineColor (Ljava/lang/String;)V
	public abstract fun setPrimaryBorderColor (Ljava/lang/String;)V
	public abstract fun setPrimaryColor (Ljava/lang/String;)V
	public abstract fun setPrimaryTextColor (Ljava/lang/String;)V
	public abstract fun setSecondaryColor (Ljava/lang/String;)V
	public abstract fun setTertiaryColor (Ljava/lang/String;)V
}

public final class modular/mermaid/NodePlacementStrategy : java/lang/Enum, modular/core/internal/StringEnum {
	public static final field BrandesKoepf Lmodular/mermaid/NodePlacementStrategy;
	public static final field LinearSegments Lmodular/mermaid/NodePlacementStrategy;
	public static final field NetworkSimplex Lmodular/mermaid/NodePlacementStrategy;
	public static final field Simple Lmodular/mermaid/NodePlacementStrategy;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lmodular/mermaid/NodePlacementStrategy;
	public static fun values ()[Lmodular/mermaid/NodePlacementStrategy;
}

public final class modular/mermaid/Theme : java/lang/Enum, modular/core/internal/StringEnum {
	public static final field Base Lmodular/mermaid/Theme;
	public static final field Dark Lmodular/mermaid/Theme;
	public static final field Default Lmodular/mermaid/Theme;
	public static final field Forest Lmodular/mermaid/Theme;
	public static final field Neutral Lmodular/mermaid/Theme;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lmodular/mermaid/Theme;
	public static fun values ()[Lmodular/mermaid/Theme;
}

public abstract class modular/mermaid/tasks/WriteMarkdownLegend : org/gradle/api/DefaultTask, modular/core/tasks/ModularGenerationTask, modular/core/tasks/TaskWithOutputFile {
	public fun <init> ()V
	public fun execute ()V
	public abstract fun getLinkTypes ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getModuleTypes ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
}

public abstract class modular/mermaid/tasks/WriteMermaidChart : org/gradle/api/DefaultTask, modular/core/tasks/ModularGenerationTask, modular/core/tasks/TaskWithOutputFile {
	public fun <init> ()V
	public fun execute ()V
	public abstract fun getConfig ()Lorg/gradle/api/provider/Property;
	public abstract fun getGroupModules ()Lorg/gradle/api/provider/Property;
	public abstract fun getLinksFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getModuleTypesFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getReplacements ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getThisPath ()Lorg/gradle/api/provider/Property;
}

public final class org/gradle/kotlin/dsl/LinkTypeDslKt {
	public static final fun api (Lmodular/mermaid/MermaidNamedLinkTypeContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun api (Lmodular/mermaid/MermaidNamedLinkTypeContainer;Lmodular/mermaid/LinkStyle;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun api (Lmodular/mermaid/MermaidNamedLinkTypeContainer;Lmodular/mermaid/LinkStyle;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun api (Lmodular/mermaid/MermaidNamedLinkTypeContainer;Lmodular/mermaid/LinkStyle;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun api$default (Lmodular/mermaid/MermaidNamedLinkTypeContainer;Lmodular/mermaid/LinkStyle;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun implementation (Lmodular/mermaid/MermaidNamedLinkTypeContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun implementation (Lmodular/mermaid/MermaidNamedLinkTypeContainer;Lmodular/mermaid/LinkStyle;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun implementation (Lmodular/mermaid/MermaidNamedLinkTypeContainer;Lmodular/mermaid/LinkStyle;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun implementation (Lmodular/mermaid/MermaidNamedLinkTypeContainer;Lmodular/mermaid/LinkStyle;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun implementation$default (Lmodular/mermaid/MermaidNamedLinkTypeContainer;Lmodular/mermaid/LinkStyle;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun register (Lmodular/mermaid/MermaidNamedLinkTypeContainer;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun register (Lmodular/mermaid/MermaidNamedLinkTypeContainer;Ljava/lang/String;Lmodular/mermaid/LinkStyle;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun register (Lmodular/mermaid/MermaidNamedLinkTypeContainer;Ljava/lang/String;Lmodular/mermaid/LinkStyle;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static final fun register (Lmodular/mermaid/MermaidNamedLinkTypeContainer;Ljava/lang/String;Lmodular/mermaid/LinkStyle;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public static synthetic fun register$default (Lmodular/mermaid/MermaidNamedLinkTypeContainer;Ljava/lang/String;Lmodular/mermaid/LinkStyle;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/gradle/api/NamedDomainObjectProvider;
}

